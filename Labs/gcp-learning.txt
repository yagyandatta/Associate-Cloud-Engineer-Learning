1. Virtual Machine
- command line cli
-- to list the account : gcloud auth list
-- to list the project : gcloud config list project

-- to set the default values
--- gcloud config set compute/region
--- gcloud config set compute/zone

-- to get the values of defaults
--- gcloud config get-value compute/zone
--- gcloud config get-value compute/region

-- to set the required data
--- export ZONE=$(gcloud config get-value compute/zone)
--- export PROJECT_ID=$(gcloud config get-value project)
--- echo -e "PROJECT ID: $PROJECT_ID\nZONE: $ZONE"


2. Create VM command
-- gcloud compute instances create www1 \
     --zone=Zone \
     --tags=network-lb-tag \
     --machine-type=e2-small \
     --image-family=debian-11 \
     --image-project=debian-cloud \
     --metadata=startup-script='#!/bin/bash
       apt-get update
       apt-get install apache2 -y
       service apache2 restart
       echo "
   <h3>Web Server: www1</h3>" | tee /var/www/html/index.html'

3. Create a firewall rule to allow external traffic to the VM instances:
-- gcloud compute firewall-rules create www-firewall-network-lb \
    --target-tags network-lb-tag --allow tcp:80
    
    
4. Create a static external IP address for LB:
-- gcloud compute addresses create network-lb-ip-1 \
  --region Region
  
5. Add a legacy HTTP health check resource:
-- gcloud compute http-health-checks create basic-check

6. Add a target pool:
-- gcloud compute target-pools create www-pool \
  --region Region --http-health-check basic-check
  
7. Add the instances to the pool:
-- gcloud compute target-pools add-instances www-pool \
    --instances www1,www2,www3
 
8. Add a forwarding rule:
-- gcloud compute forwarding-rules create www-rule \
    --region  Region \
    --ports 80 \
    --address network-lb-ip-1 \
    --target-pool www-pool
    
9. to view external IP address of the forwarding rules:
-- gcloud compute forwarding-rules describe www-rule --region Region

10. create the load balancer template:
--
gcloud compute instance-templates create lb-backend-template \
   --region=Region \
   --network=default \
   --subnet=default \
   --tags=allow-health-check \
   --machine-type=e2-medium \
   --image-family=debian-11 \
   --image-project=debian-cloud \
   --metadata=startup-script='#!/bin/bash
     apt-get update
     apt-get install apache2 -y
     a2ensite default-ssl
     a2enmod ssl
     vm_hostname="$(curl -H "Metadata-Flavor:Google" \
     http://169.254.169.254/computeMetadata/v1/instance/name)"
     echo "Page served from: $vm_hostname" | \
     tee /var/www/html/index.html
     systemctl restart apache2'
     
11. Create a managed instance group based on the template:
--
gcloud compute instance-groups managed create lb-backend-group \
   --template=lb-backend-template --size=2 --zone=Zone

12. Create the fw-allow-health-check firewall rule.
--
gcloud compute firewall-rules create fw-allow-health-check \
  --network=default \
  --action=allow \
  --direction=ingress \
  --source-ranges=130.211.0.0/22,35.191.0.0/16 \
  --target-tags=allow-health-check \
  --rules=tcp:80

13. set up a global static external IP
--
gcloud compute addresses create lb-ipv4-1 \
  --ip-version=IPV4 \
  --global

14. Create a health check for the load balancer:
--
gcloud compute health-checks create http http-basic-check \
  --port 80
  
15. Create a backend service:
--
gcloud compute backend-services create web-backend-service \
  --protocol=HTTP \
  --port-name=http \
  --health-checks=http-basic-check \
  --global

16. add instance group as the backend to the backend service
--
gcloud compute backend-services add-backend web-backend-service \
  --instance-group=lb-backend-group \
  --instance-group-zone=Zone \
  --global
  
17. Create a URL map to route the incoming requests to the default backend service:
--
gcloud compute url-maps create web-map-http \
    --default-service web-backend-service
    
18. Create a target HTTP proxy to route requests to your URL map:
--
gcloud compute target-http-proxies create http-lb-proxy \
    --url-map web-map-http

19. Create a global forwarding rule to route incoming requests to the proxy:
--
gcloud compute forwarding-rules create http-content-rule \
   --address=lb-ipv4-1\
   --global \
   --target-http-proxy=http-lb-proxy \
   --ports=80

